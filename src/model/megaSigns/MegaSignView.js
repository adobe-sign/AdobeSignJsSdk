/**
*  Copyright 2019 Adobe Systems Incorporated. All rights reserved.
*  This file is licensed to you under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License. You may obtain a copy
*  of the License at http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under
*  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
*  OF ANY KIND, either express or implied. See the License for the specific language
*  governing permissions and limitations under the License.
*
*
**/


/**
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SwaggerJsClient) {
      root.SwaggerJsClient = {};
    }
    root.SwaggerJsClient.MegaSignView = factory(root.SwaggerJsClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MegaSignView model module.
   * @module model/megaSigns/MegaSignView
   * @version 6.0.0
   */

  /**
   * Constructs a new <code>MegaSignView</code>.
   * @alias module:model/megaSigns/MegaSignView
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>MegaSignView</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/megaSigns/MegaSignView} obj Optional instance to populate.
   * @return {module:model/megaSigns/MegaSignView} The populated <code>MegaSignView</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('embeddedCode')) {
        obj['embeddedCode'] = ApiClient.convertToType(data['embeddedCode'], 'String');
      }
      if (data.hasOwnProperty('expiration')) {
        obj['expiration'] = ApiClient.convertToType(data['expiration'], 'Date');
      }
      if (data.hasOwnProperty('isCurrent')) {
        obj['isCurrent'] = ApiClient.convertToType(data['isCurrent'], 'Boolean');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
    }
    return obj;
  }

  /**
   * Embedded code of url of resource 
   * @member {String} embeddedCode
   */
  exports.prototype['embeddedCode'] = undefined;
  /**
   * Expiration of user url 
   * @member {Date} expiration
   */
  exports.prototype['expiration'] = undefined;
  /**
   * True if this view is the current view
   * @member {Boolean} isCurrent
   */
  exports.prototype['isCurrent'] = undefined;
  /**
   * Name of the requested mega sign view
   * @member {module:model/megaSigns/MegaSignView.NameEnum} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Url of resource location
   * @member {String} url
   */
  exports.prototype['url'] = undefined;


  /**
   * Allowed values for the <code>name</code> property.
   * @enum {String}
   * @readonly
   */
  exports.NameEnum = {
    /**
     * value: "AUTHORING"
     * @const
     */
    "AUTHORING": "AUTHORING",
    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",
    /**
     * value: "MANAGE"
     * @const
     */
    "MANAGE": "MANAGE",
    /**
     * value: "POST_CREATE"
     * @const
     */
    "POST_CREATE": "POST_CREATE",
    /**
     * value: "PREFILL"
     * @const
     */
    "PREFILL": "PREFILL",
    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"  };


  return exports;
}));



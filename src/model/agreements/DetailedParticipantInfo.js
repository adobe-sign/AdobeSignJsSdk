/**
*  Copyright 2019 Adobe Systems Incorporated. All rights reserved.
*  This file is licensed to you under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License. You may obtain a copy
*  of the License at http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under
*  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
*  OF ANY KIND, either express or implied. See the License for the specific language
*  governing permissions and limitations under the License.
*
*
**/


/**
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/agreements/ParticipantSecurityOption'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ParticipantSecurityOption'));
  } else {
    // Browser globals (root is window)
    if (!root.SwaggerJsClient) {
      root.SwaggerJsClient = {};
    }
    root.SwaggerJsClient.DetailedParticipantInfo = factory(root.SwaggerJsClient.ApiClient, root.SwaggerJsClient.ParticipantSecurityOption);
  }
}(this, function(ApiClient, ParticipantSecurityOption) {
  'use strict';




  /**
   * The DetailedParticipantInfo model module.
   * @module model/agreements/DetailedParticipantInfo
   * @version 6.0.0
   */

  /**
   * Constructs a new <code>DetailedParticipantInfo</code>.
   * @alias module:model/agreements/DetailedParticipantInfo
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>DetailedParticipantInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/agreements/DetailedParticipantInfo} obj Optional instance to populate.
   * @return {module:model/agreements/DetailedParticipantInfo} The populated <code>DetailedParticipantInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('company')) {
        obj['company'] = ApiClient.convertToType(data['company'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('fax')) {
        obj['fax'] = ApiClient.convertToType(data['fax'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('privateMessage')) {
        obj['privateMessage'] = ApiClient.convertToType(data['privateMessage'], 'String');
      }
      if (data.hasOwnProperty('securityOption')) {
        obj['securityOption'] = ParticipantSecurityOption.constructFromObject(data['securityOption']);
      }
      if (data.hasOwnProperty('self')) {
        obj['self'] = ApiClient.convertToType(data['self'], 'Boolean');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
    }
    return obj;
  }

  /**
   * The company of the participant, if available. This cannot be changed as part of the PUT call.
   * @member {String} company
   */
  exports.prototype['company'] = undefined;
  /**
   * Email of the participant. In case of modifying a participant set (PUT) this is a required field. In case of GET, this is the required field and will always be returned unless it is a fax workflow (legacy agreements) that were created using fax as input
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Fax of the participant. New Agreements can not be created with fax option. This is only returned for legacy agreements created with fax as participants
   * @member {String} fax
   */
  exports.prototype['fax'] = undefined;
  /**
   * The unique identifier of the participant. This will be returned as part of Get call but is not mandatory to be passed as part of PUT call for agreements/{id}/members/participantSets/{id}.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The name of the participant, if available. This cannot be changed as part of the PUT call.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The private message of the participant, if available. This cannot be changed as part of the PUT call.
   * @member {String} privateMessage
   */
  exports.prototype['privateMessage'] = undefined;
  /**
   * Security options that apply to the participant.
   * @member {module:model/agreements/ParticipantSecurityOption} securityOption
   */
  exports.prototype['securityOption'] = undefined;
  /**
   * True if this participant is the same user that is calling the API. Returned as part of Get. Ignored (not required) if modifying a participant set (PUT).
   * @member {Boolean} self
   */
  exports.prototype['self'] = undefined;
  /**
   * The status of the participant. This cannot be changed as part of the PUT call. New participants will be ignored if added with a REPLACED status.
   * @member {module:model/agreements/DetailedParticipantInfo.StatusEnum} status
   */
  exports.prototype['status'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "REPLACED"
     * @const
     */
    "REPLACED": "REPLACED",
    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE"  };


  return exports;
}));



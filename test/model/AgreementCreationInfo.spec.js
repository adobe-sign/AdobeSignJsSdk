/**
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
}(this, function(expect, SwaggerJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerJsClient.AgreementCreationInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AgreementCreationInfo', function() {
    it('should create an instance of AgreementCreationInfo', function() {
      // uncomment below and update the code to test AgreementCreationInfo
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be.a(SwaggerJsClient.AgreementCreationInfo);
    });

    it('should have the property ccs (base name: "ccs")', function() {
      // uncomment below and update the code to test the property ccs
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property deviceInfo (base name: "deviceInfo")', function() {
      // uncomment below and update the code to test the property deviceInfo
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property documentVisibilityEnabled (base name: "documentVisibilityEnabled")', function() {
      // uncomment below and update the code to test the property documentVisibilityEnabled
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property emailOption (base name: "emailOption")', function() {
      // uncomment below and update the code to test the property emailOption
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property expirationTime (base name: "expirationTime")', function() {
      // uncomment below and update the code to test the property expirationTime
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property fileInfos (base name: "fileInfos")', function() {
      // uncomment below and update the code to test the property fileInfos
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property firstReminderDelay (base name: "firstReminderDelay")', function() {
      // uncomment below and update the code to test the property firstReminderDelay
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property formFieldLayerTemplates (base name: "formFieldLayerTemplates")', function() {
      // uncomment below and update the code to test the property formFieldLayerTemplates
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property mergeFieldInfo (base name: "mergeFieldInfo")', function() {
      // uncomment below and update the code to test the property mergeFieldInfo
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property participantSetsInfo (base name: "participantSetsInfo")', function() {
      // uncomment below and update the code to test the property participantSetsInfo
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property postSignOption (base name: "postSignOption")', function() {
      // uncomment below and update the code to test the property postSignOption
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property reminderFrequency (base name: "reminderFrequency")', function() {
      // uncomment below and update the code to test the property reminderFrequency
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property securityOption (base name: "securityOption")', function() {
      // uncomment below and update the code to test the property securityOption
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property senderEmail (base name: "senderEmail")', function() {
      // uncomment below and update the code to test the property senderEmail
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property signatureType (base name: "signatureType")', function() {
      // uncomment below and update the code to test the property signatureType
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property vaultingInfo (base name: "vaultingInfo")', function() {
      // uncomment below and update the code to test the property vaultingInfo
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

    it('should have the property workflowId (base name: "workflowId")', function() {
      // uncomment below and update the code to test the property workflowId
      //var instane = new SwaggerJsClient.AgreementCreationInfo();
      //expect(instance).to.be();
    });

  });

}));

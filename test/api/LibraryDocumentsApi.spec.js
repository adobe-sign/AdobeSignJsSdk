/**
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
}(this, function(expect, SwaggerJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerJsClient.LibraryDocumentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LibraryDocumentsApi', function() {
    describe('createLibraryDocument', function() {
      it('should call createLibraryDocument successfully', function(done) {
        //uncomment below and update the code to test createLibraryDocument
        //instance.createLibraryDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLibraryDocumentView', function() {
      it('should call createLibraryDocumentView successfully', function(done) {
        //uncomment below and update the code to test createLibraryDocumentView
        //instance.createLibraryDocumentView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCombinedDocument', function() {
      it('should call getCombinedDocument successfully', function(done) {
        //uncomment below and update the code to test getCombinedDocument
        //instance.getCombinedDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocuments', function() {
      it('should call getDocuments successfully', function(done) {
        //uncomment below and update the code to test getDocuments
        //instance.getDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvents', function() {
      it('should call getEvents successfully', function(done) {
        //uncomment below and update the code to test getEvents
        //instance.getEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFormData', function() {
      it('should call getFormData successfully', function(done) {
        //uncomment below and update the code to test getFormData
        //instance.getFormData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocument', function() {
      it('should call getLibraryDocument successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocument
        //instance.getLibraryDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocumentAuditTrail', function() {
      it('should call getLibraryDocumentAuditTrail successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocumentAuditTrail
        //instance.getLibraryDocumentAuditTrail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocumentImageUrls', function() {
      it('should call getLibraryDocumentImageUrls successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocumentImageUrls
        //instance.getLibraryDocumentImageUrls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocumentInfo', function() {
      it('should call getLibraryDocumentInfo successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocumentInfo
        //instance.getLibraryDocumentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocumentNoteForApiUser', function() {
      it('should call getLibraryDocumentNoteForApiUser successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocumentNoteForApiUser
        //instance.getLibraryDocumentNoteForApiUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryDocuments', function() {
      it('should call getLibraryDocuments successfully', function(done) {
        //uncomment below and update the code to test getLibraryDocuments
        //instance.getLibraryDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLibraryDocument', function() {
      it('should call updateLibraryDocument successfully', function(done) {
        //uncomment below and update the code to test updateLibraryDocument
        //instance.updateLibraryDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLibraryDocumentNoteForApiUser', function() {
      it('should call updateLibraryDocumentNoteForApiUser successfully', function(done) {
        //uncomment below and update the code to test updateLibraryDocumentNoteForApiUser
        //instance.updateLibraryDocumentNoteForApiUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLibraryDocumentState', function() {
      it('should call updateLibraryDocumentState successfully', function(done) {
        //uncomment below and update the code to test updateLibraryDocumentState
        //instance.updateLibraryDocumentState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLibraryDocumentVisibility', function() {
      it('should call updateLibraryDocumentVisibility successfully', function(done) {
        //uncomment below and update the code to test updateLibraryDocumentVisibility
        //instance.updateLibraryDocumentVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
